{"version":3,"sources":["screens/Android.tsx","screens/Desktop.tsx","screens/Ios.tsx","screens/index.tsx","App.tsx","index.tsx"],"names":["App","className","isAndroid","navigator","userAgent","toLowerCase","indexOf","isIOS","isNotAnyMobile","Android","Ios","Desktop","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAYeA,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,wECMOD,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qECMOD,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,oECYOD,MAbf,WACE,IAAME,EAAYC,UAAUC,UAAUC,cAAcC,QAAQ,YAAc,EACpEC,EAAQJ,UAAUC,UAAUC,cAAcC,QAAQ,WAAa,EAC/DE,GAAkBN,IAAcK,EACtC,OACE,qCACGL,GAAa,cAACO,EAAD,IACbF,GAAS,cAACG,EAAD,IACTF,GAAkB,cAACG,EAAD,QCGVX,MAZf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOY,KAAM,CAAC,IAAK,iBAAkB,oBAAqBC,OAAK,EAA/D,SACE,cAAC,EAAD,WCLVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.382108de.chunk.js","sourcesContent":["import React from 'react';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>This will redirect to Android page</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>This is the future desktop page</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>This will redirect to ios page</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport Android from './Android';\nimport Desktop from './Desktop';\nimport Ios from './Ios';\n\nfunction App(): JSX.Element {\n  const isAndroid = navigator.userAgent.toLowerCase().indexOf('android') > -1;\n  const isIOS = navigator.userAgent.toLowerCase().indexOf('iphone') > -1;\n  const isNotAnyMobile = !isAndroid && !isIOS;\n  return (\n    <>\n      {isAndroid && <Android />}\n      {isIOS && <Ios />}\n      {isNotAnyMobile && <Desktop />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Screens from './screens';\n\nfunction App(): JSX.Element {\n  return (\n    <Router>\n      <Switch>\n        <Route path={['/', '/users/:userId', '/groups/:groupId']} exact>\n          <Screens />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}