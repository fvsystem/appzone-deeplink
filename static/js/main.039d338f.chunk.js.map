{"version":3,"sources":["screens/Android.tsx","screens/Desktop.tsx","screens/Ios.tsx","services/api.ts","screens/index.tsx","App.tsx","index.tsx"],"names":["App","item","className","Helmet","property","content","name","image","axios","defaults","baseURL","location","useLocation","React","useState","setItem","isAndroid","navigator","userAgent","toLowerCase","indexOf","isIOS","isNotAnyMobile","useEffect","pathname","includes","split","length","groupId","api","get","then","data","photoURL","Android","Ios","Desktop","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLA6BeA,EAlBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC3B,sBAAKC,UAAU,MAAf,UACGD,GACC,eAACE,EAAA,EAAD,WACE,sBAAMC,SAAS,eAAeC,QAAQ,YACtC,sBAAMD,SAAS,WAAWC,QAASJ,EAAKK,OAExC,sBAAMF,SAAS,WAAWC,QAASJ,EAAKM,QACxC,sBAAMH,SAAS,UAAUC,QAAQ,YACjC,sBAAMD,SAAS,kBAAkBC,QAAQ,kBAG7C,wBAAQH,UAAU,aAAlB,SACE,yECKSF,EAlBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC3B,sBAAKC,UAAU,MAAf,UACGD,GACC,eAACE,EAAA,EAAD,WACE,sBAAMC,SAAS,eAAeC,QAAQ,YACtC,sBAAMD,SAAS,WAAWC,QAASJ,EAAKK,OAExC,sBAAMF,SAAS,WAAWC,QAASJ,EAAKM,QACxC,sBAAMH,SAAS,UAAUC,QAAQ,YACjC,sBAAMD,SAAS,kBAAkBC,QAAQ,kBAG7C,wBAAQH,UAAU,aAAlB,SACE,sECKSF,EAlBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC3B,sBAAKC,UAAU,MAAf,UACGD,GACC,eAACE,EAAA,EAAD,WACE,sBAAMC,SAAS,eAAeC,QAAQ,YACtC,sBAAMD,SAAS,WAAWC,QAASJ,EAAKK,OAExC,sBAAMF,SAAS,WAAWC,QAASJ,EAAKM,QACxC,sBAAMH,SAAS,UAAUC,QAAQ,YACjC,sBAAMD,SAAS,kBAAkBC,QAAQ,kBAG7C,wBAAQH,UAAU,aAAlB,SACE,qE,iBCtBNM,IAAMC,SAASC,QAAU,uBAEVF,QAAf,ECyCeR,MAjCf,WACE,IAAMW,EAAWC,cACjB,EAAwBC,IAAMC,WAA9B,mBAAOb,EAAP,KAAac,EAAb,KACMC,EAAYC,UAAUC,UAAUC,cAAcC,QAAQ,YAAc,EACpEC,EAAQJ,UAAUC,UAAUC,cAAcC,QAAQ,WAAa,EAC/DE,GAAkBN,IAAcK,EAmBtC,OAlBAE,qBAAU,WACR,GAAIZ,EAASa,SAASC,SAAS,WACzBd,EAASa,SAASE,MAAM,KAAKC,QAAU,EAAG,CAC5C,IAAMC,EAAUjB,EAASa,SAASE,MAAM,KAAK,GAC7CG,EAAIC,IAAJ,iBAAkBF,IAAWG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACnCjB,EAAQ,CAAET,KAAM0B,EAAK1B,KAAMC,MAAOyB,EAAKC,cAI7C,GAAItB,EAASa,SAASC,SAAS,UACzBd,EAASa,SAASE,MAAM,KAAKC,QAAU,EAAG,CAC5C,IAAMC,EAAUjB,EAASa,SAASE,MAAM,KAAK,GAC7CG,EAAIC,IAAJ,gBAAiBF,IAAWG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAClCjB,EAAQ,CAAET,KAAM0B,EAAK1B,KAAMC,MAAOyB,EAAKC,iBAI5C,CAACtB,IAEF,qCACGK,GAAa,cAACkB,EAAD,CAASjC,KAAMA,IAC5BoB,GAAS,cAACc,EAAD,CAAKlC,KAAMA,IACpBqB,GAAkB,cAACc,EAAD,CAASnC,KAAMA,QCxBzBD,MAZf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOqC,KAAK,IAAZ,SACE,cAAC,EAAD,WCLVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.039d338f.chunk.js","sourcesContent":["/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface Props {\n  item?: {\n    name: string;\n    image: string;\n  };\n}\n\nconst App: React.FC<Props> = ({ item }) => (\n  <div className=\"App\">\n    {item && (\n      <Helmet>\n        <meta property=\"og:site_name\" content=\"Appzone\" />\n        <meta property=\"og:title\" content={item.name} />\n        {/* <meta property=\"og:description\" content=\"Programa de fiestas\" /> */}\n        <meta property=\"og:image\" content={item.image} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:updated_time\" content=\"1440432930\" />\n      </Helmet>\n    )}\n    <header className=\"App-header\">\n      <p>This will redirect to Android page</p>\n    </header>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface Props {\n  item?: {\n    name: string;\n    image: string;\n  };\n}\n\nconst App: React.FC<Props> = ({ item }) => (\n  <div className=\"App\">\n    {item && (\n      <Helmet>\n        <meta property=\"og:site_name\" content=\"Appzone\" />\n        <meta property=\"og:title\" content={item.name} />\n        {/* <meta property=\"og:description\" content=\"Programa de fiestas\" /> */}\n        <meta property=\"og:image\" content={item.image} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:updated_time\" content=\"1440432930\" />\n      </Helmet>\n    )}\n    <header className=\"App-header\">\n      <p>This is the future desktop page</p>\n    </header>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface Props {\n  item?: {\n    name: string;\n    image: string;\n  };\n}\n\nconst App: React.FC<Props> = ({ item }) => (\n  <div className=\"App\">\n    {item && (\n      <Helmet>\n        <meta property=\"og:site_name\" content=\"Appzone\" />\n        <meta property=\"og:title\" content={item.name} />\n        {/* <meta property=\"og:description\" content=\"Programa de fiestas\" /> */}\n        <meta property=\"og:image\" content={item.image} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:updated_time\" content=\"1440432930\" />\n      </Helmet>\n    )}\n    <header className=\"App-header\">\n      <p>This will redirect to ios page</p>\n    </header>\n  </div>\n);\n\nexport default App;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.apz.link';\n\nexport default axios;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Android from './Android';\nimport Desktop from './Desktop';\nimport Ios from './Ios';\nimport api from '../services/api';\n\ninterface Item {\n  name: string;\n  image: string;\n}\n\nfunction App(): JSX.Element {\n  const location = useLocation();\n  const [item, setItem] = React.useState<Item | undefined>();\n  const isAndroid = navigator.userAgent.toLowerCase().indexOf('android') > -1;\n  const isIOS = navigator.userAgent.toLowerCase().indexOf('iphone') > -1;\n  const isNotAnyMobile = !isAndroid && !isIOS;\n  useEffect(() => {\n    if (location.pathname.includes('groups')) {\n      if (location.pathname.split('/').length >= 3) {\n        const groupId = location.pathname.split('/')[2];\n        api.get(`groups/${groupId}`).then(({ data }) => {\n          setItem({ name: data.name, image: data.photoURL });\n        });\n      }\n    }\n    if (location.pathname.includes('users')) {\n      if (location.pathname.split('/').length >= 3) {\n        const groupId = location.pathname.split('/')[2];\n        api.get(`users/${groupId}`).then(({ data }) => {\n          setItem({ name: data.name, image: data.photoURL });\n        });\n      }\n    }\n  }, [location]);\n  return (\n    <>\n      {isAndroid && <Android item={item} />}\n      {isIOS && <Ios item={item} />}\n      {isNotAnyMobile && <Desktop item={item} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Screens from './screens';\n\nfunction App(): JSX.Element {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Screens />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}